<?xml version="1.0"?>
<launch>

<!-- arguments -->
     <arg name="domain_path" default="$(find rosplan_planning_system)/common/rosplan_planning_system/domain_robot_delivery.pddl" />
<arg name="robust_domain_path" default="$(find rosplan_planning_system)/common/rosplan_planning_system/domain_robot_delivery_robust.pddl" />
     <arg name="problem_path" default="$(find rosplan_planning_system)/common/rosplan_planning_system/problem_g01_w05_ROSPlan.pddl" />
    <arg name="init_problem_path" default="$(find rosplan_planning_system)/common/rosplan_planning_system/problem_g01_w05.pddl" /> 

 <!-- knowledge base -->
     <node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base"
           type="knowledgeBase" respawn="false" output="screen">
         <param name="domain_path" value="$(arg domain_path)" />
         <param name="problem_path" value="$(arg init_problem_path)" />
         <param name="database_path" value="$(find
rosplan_knowledge_base)/common/mongoDB/" />
         <param name="use_unknowns" value="false" /> <!-- conditional
planning flags -->
     </node>

 <!-- problem generation -->
     <include file="$(find
rosplan_planning_system)/launch/includes/problem_interface.launch">
         <arg name="knowledge_base" value="rosplan_knowledge_base" />
         <arg name="domain_path"      value="$(arg domain_path)" />
         <arg name="problem_path"     value="$(arg problem_path)" />
         <arg name="problem_topic"    value="problem_instance" />
     </include>

 <!-- planner interface -->
     <include file="$(find
rosplan_planning_system)/launch/includes/planner_interface.launch">
         <arg name="use_problem_topic"    value="true" />
         <arg name="problem_topic"
value="/rosplan_problem_interface/problem_instance" />
         <arg name="planner_topic"        value="planner_output" />
         <arg name="domain_path"          value="$(arg domain_path)" />
         <arg name="problem_path"         value="$(arg problem_path)" />
         <arg name="data_path"            value="$(find
rosplan_planning_system)/common/rosplan_planning_system" />
         <arg name="planner_command"      value="timeout 900 $(find
rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
     </include>

 <!-- plan parsing -->
     <include file="$(find
rosplan_planning_system)/launch/includes/parsing_interface.launch">
         <arg name="knowledge_base" value="rosplan_knowledge_base" />
         <arg name="planner_topic"
value="/rosplan_planner_interface/planner_output" />
         <arg name="plan_topic"       value="complete_plan" />
     </include>

 <!-- STN_tool-->
     <include file="$(find
rosplan_planning_system)/launch/includes/stn_tool.launch">
         <arg name="plan_topic"
value="/rosplan_parsing_interface/complete_plan" />
         <arg name="use_problem_topic"    value="true" />
         <arg name="problem_topic"
value="/rosplan_problem_interface/problem_instance" />
<arg name="data_path"            value="$(find
rosplan_planning_system)/common/rosplan_planning_system" />
         <arg name="robust_domain_path"      value="$(arg robust_domain_path)" />
         <arg name="problem_path"     value="$(arg problem_path)" />
     </include>

 <!-- plan dispatch -->
     <include file="$(find
rosplan_planning_system)/launch/includes/dispatch_interface.launch">
         <arg name="knowledge_base" value="rosplan_knowledge_base" />
         <arg name="plan_topic" 
value="/rosplan_parsing_interface/robust_plan" />
         <arg name="action_dispatch_topic" value="action_dispatch" />
         <arg name="action_feedback_topic" value="action_feedback" />
         <arg name="display_edge_type"        value="true" /> <!-- color
edges by type, useful for debugging -->
     </include>

    <!-- sim actions -->

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="goto_waypoint" />
    </include>

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="localise" />
    </include>

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="dock" />
    </include>

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="undock" />
    </include>

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="ask_unload" />
    </include>

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="wait_load_at_printer" />
    </include>

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
        <arg name="pddl_action_name" value="wait_unload" />
    </include>

</launch>



